I"‹<h2 id="structure">Structure</h2>

<p>Each GTFO binary is defined in a file in the <a href="https://github.com/GTFOBins/GTFOBins.github.io/tree/master/_gtfobins"><code class="language-plaintext highlighter-rouge">_gtfobins/</code></a> folder named as <code class="language-plaintext highlighter-rouge">&lt;binary name&gt;.md</code>, such file consists only of a <a href="http://yaml.org/">YAML</a> front matter which describes the binary and its functions.</p>

<p>The full syntax is the following:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
description: Optional description of the binary
functions:
  FUNCTION:
    - description: Optional description of the example
      code: Code of the example
    - ....
  FUNCTION:
    - description: Optional description of the example
      code: Code of the example
    - ...
  ...
---
</code></pre></div></div>

<p>Where <code class="language-plaintext highlighter-rouge">FUNCTION</code> is one of the values described in the <a href="https://github.com/GTFOBins/GTFOBins.github.io/blob/master/_data/functions.yml"><code class="language-plaintext highlighter-rouge">_data/functions.yml</code></a> file.</p>

<p>Feel free to use any file in the <a href="https://github.com/GTFOBins/GTFOBins.github.io/tree/master/_gtfobins"><code class="language-plaintext highlighter-rouge">_gtfobins/</code></a> folder as an example.</p>

<h2 id="pull-request-process">Pull request process</h2>

<p>Vendor software is accepted as well as standard Unix binaries. Binaries and techniques that only works on certain operating systems and versions are accepted and such limitations shall be noted in the <code class="language-plaintext highlighter-rouge">description</code> field.</p>

<p>Before sending a pull request of a new binary or function, ensure the following:</p>

<ol>
  <li>Verify the function works on at least one type of modern Unix system.</li>
  <li>Classifying SUID-related functions is tricky because they depend on the default shell (i.e. Debian <code class="language-plaintext highlighter-rouge">/bin/sh</code> doesnâ€™t drop the privileges, other Linux default shells do it) and on how the external command is called (i.e. <code class="language-plaintext highlighter-rouge">exec()</code> family vs. <code class="language-plaintext highlighter-rouge">system()</code> calls). Here an helpful check:
    <ul>
      <li>The function is <code class="language-plaintext highlighter-rouge">suid-enabled</code> if runs external commands on Ubuntu Linux maintaining the SUID privileges.</li>
      <li>The function is <code class="language-plaintext highlighter-rouge">suid-limited</code> if runs external commands on Debian maintaining the SUID privileges, but it drops them on Ubuntu Linux.</li>
      <li>The function is not <code class="language-plaintext highlighter-rouge">suid-*</code> flagged if drops the privileges in Debian Linux.</li>
    </ul>
  </li>
  <li>Verify <code class="language-plaintext highlighter-rouge">sudo-enabled</code> function runs external commands under the <code class="language-plaintext highlighter-rouge">sudo</code> privileged context.</li>
</ol>

<p>Pull requests adding new functions in <a href="https://github.com/GTFOBins/GTFOBins.github.io/blob/master/_data/functions.yml"><code class="language-plaintext highlighter-rouge">_data/functions.yml</code></a> are allowed and subjected to project maintainers vetting.</p>

:ET